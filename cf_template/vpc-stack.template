{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Version 0.0.7 template to for creating a VPC with Subnets, Route Tables and Internet Gateway",

	"Parameters" : {

		"VPCCIDR" : {
			"Description" : "CIDR Block for the VPC",
			"Type" : "String",
			"Default" : "10.0.0.0/16",
			"AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
		},

		"RemoteAccessCIDR" : {
			"Description" : "CIDR IP from where we can SSH into Private Subnet via NAT instance",
			"Type" : "String",
			"MinLength" : "9",
			"MaxLength" : "18",
			"Default" : "x.x.x.x/32",
			"NoEcho" : true,
			"AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
		},

		"ProductionEnvironment" : {
			"Description" : "Production environment for the VPC - (Dev1, Alpha, Beta, Pre-Prod, Prod, Test)",
			"Type" : "String",
			"Default" : "Dev1",
			"AllowedValues" : [ "Dev1", "Alpha", "Beta", "Pre-Prod", "Prod", "Test" ],
			"ConstraintDescription" : "must be either Dev1, Alpha or Prod."
		}
	},

	"Resources" : {

		"VPC" : {
			"Type" : "AWS::EC2::VPC",
			"Properties" : {
				"CidrBlock" : { "Ref" : "VPCCIDR" },
				"EnableDnsSupport" : true,
				"EnableDnsHostnames" : true,
				"Tags" : [{
					"Key" : "Name",
					"Value" : { "Ref" : "ProductionEnvironment" }
				},
				{
					"Key" : "Application",
					"Value" : "SkynetAlpha" 
				}]
			}
		},

		"InternetGateway" : {
			"Type" : "AWS::EC2::InternetGateway",
			"DependsOn" : ["VPC"],
			"Properties" : {
				"Tags" : [{
					"Key" : "Name",
					"Value" : { "Fn::Join" : ["", [ { "Ref" : "ProductionEnvironment" }, "-InternetGateway" ] ] }
				}]
			}
		},

		"VPCGatewayAttachment" : {
			"Type" : "AWS::EC2::VPCGatewayAttachment",
			"DependsOn" : ["VPC", "InternetGateway"],
			"Properties" : {
				"InternetGatewayId" : { "Ref" : "InternetGateway" },
				"VpcId" : { "Ref" : "VPC" }
			}
		},

		"Subnets" : {
			"Type" : "AWS::CloudFormation::Stack",
			"DependsOn" : [ "VPC", "InternetGateway", "VPCGatewayAttachment" ],
			"Properties" : {
				"TemplateURL" : "https://s3.amazonaws.com/cf-avispa-templates/beta/subnet-stack.template",
				"Parameters" : {
					"VPC"                   : { "Ref" : "VPC" },
					"ProductionEnvironment" : { "Ref" : "ProductionEnvironment" }
				}
			}
		},

		"RouteTables" : {
			"Type" : "AWS::CloudFormation::Stack",
			"DependsOn" : [ "VPC", "InternetGateway", "VPCGatewayAttachment", "Subnets" ],
			"Properties" : {
				"TemplateURL" : "https://s3.amazonaws.com/cf-avispa-templates/beta/route-table-stack.template",
				"Parameters" : {
					"VPC"                   : { "Ref" : "VPC" },
					"InternetGateway"       : { "Ref" : "InternetGateway" },
					"PublicSubnetOne"       : { "Fn::GetAtt" : [ "Subnets", "Outputs.PublicSubnetOne" ] },
					"PublicSubnetTwo"       : { "Fn::GetAtt" : [ "Subnets", "Outputs.PublicSubnetTwo" ] },
					"PrivateSubnetOne"      : { "Fn::GetAtt" : [ "Subnets", "Outputs.PrivateSubnetOne" ] },
					"PrivateSubnetTwo"      : { "Fn::GetAtt" : [ "Subnets", "Outputs.PrivateSubnetTwo" ] },
					"ProductionEnvironment" : { "Ref" : "ProductionEnvironment" }
				}
			}

		},

		"NetworkAcls" : {
			"Type" : "AWS::CloudFormation::Stack",
			"DependsOn" : [ "VPC", "Subnets" ],
			"Properties" : {
				"TemplateURL" : "https://s3.amazonaws.com/cf-avispa-templates/beta/network-stack.template",
				"Parameters" : {
					"VPC"                   : { "Ref" : "VPC" },
					"RemoteAccessCIDR"      : { "Ref" : "RemoteAccessCIDR" },
					"PublicSubnetOne"       : { "Fn::GetAtt" : [ "Subnets", "Outputs.PublicSubnetOne" ] },
					"PublicSubnetTwo"       : { "Fn::GetAtt" : [ "Subnets", "Outputs.PublicSubnetTwo" ] },
					"PrivateSubnetOne"      : { "Fn::GetAtt" : [ "Subnets", "Outputs.PrivateSubnetOne" ] },
					"PrivateSubnetTwo"      : { "Fn::GetAtt" : [ "Subnets", "Outputs.PrivateSubnetTwo" ] },
					"ProductionEnvironment" : { "Ref" : "ProductionEnvironment" }
				}
			}
		}
	},

	"Outputs" : {
		"VpcId" : {
			"Description" : "Logical Id of the VPC",
			"Value" : { "Ref" : "VPC" }
		},
		"PublicSubnetOne" : {
			"Description" : "Public Subnet in us-east-1a",
			"Value" : { "Fn::GetAtt" : [ "Subnets", "Outputs.PublicSubnetOne" ] }
		},
		"PublicSubnetTwo" : {
			"Description" : "Public Subnet in us-east-1c",
			"Value" : { "Fn::GetAtt" : [ "Subnets", "Outputs.PublicSubnetTwo" ] }
		},
		"PrivateSubnetOne" : {
			"Description" : "Private Subnet in us-east-1a",
			"Value" : { "Fn::GetAtt" : [ "Subnets", "Outputs.PrivateSubnetOne" ] }
		},
		"PrivateSubnetTwo" : {
			"Description" : "Private Subnet in us-east-1c",
			"Value" : { "Fn::GetAtt" : [ "Subnets", "Outputs.PrivateSubnetTwo" ] }
		},
		"PrivateRouteTable" : {
			"Description" : "Private Route Table in us-east-1a",
			"Value" : { "Fn::GetAtt" : [ "RouteTables", "Outputs.PrivateRouteTable" ] }
		}
	}
}