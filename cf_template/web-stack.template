{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Version 0.0.7 template for creating an Auto Scaling Group of Web Servers",

	"Parameters" : {

		"WebServerInstanceType" : {
			"Description" : "Type of instance to be used for the Web Servers Auto Scaling Group",
			"Type" : "String"
		},

		"PublicSubnetOne" : {
			"Description" : "Public Subnet in us-east-1a",
			"Type" : "AWS::EC2::Subnet::Id"
		},

		"PublicSubnetTwo" : {
			"Description" : "Public Subnet in us-east-1c",
			"Type" : "AWS::EC2::Subnet::Id"
		},

		"WebServerSecurityGroup" : {
			"Description" : "Security Group Id for the Web Servers Auto Scaling Group",
			"Type" : "AWS::EC2::SecurityGroup::Id"
		},

		"WebServerBucket" : {
			"Description" : "Bucket holding the Web Server configuration files",
			"Type" : "String",
			"Default" : "dev-instance-code-1-2015"
		},

		"ProductionEnvironment" : {
			"Description" : "Production environment for the VPC - (Dev1, Alpha, Beta, Pre-Prod, Prod, Test)",
			"Type" : "String",
			"Default" : "Dev1",
			"AllowedValues" : [ "Dev1", "Alpha", "Beta", "Pre-Prod", "Prod", "Test" ],
			"ConstraintDescription" : "must be either Dev1, Alpha or Prod."
		},

		"Version" : {
			"Description" : "Code Version",
			"Type" : "String",
			"AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
			"ConstraintDescription" : "must be a valid system version in the form x.x.x"
		},

		"InternalRESTLoadBalancerDNS" : {
			"Description" : "DNS name of the internal Elastic Load Balancer used for REST request",
			"Type" : "String"
		},
		"InternalSocketLoadBalancerDNS" : {
			"Description" : "DNS name of the internal Elastic Load Balancer used for Socket connections",
			"Type" : "String"
		},
		"LoadBalancerName" : {
			"Description" : "Name of the Load Balancer to attach the ASG",
			"Type" : "String"
		}
	},

	"Mappings" : {
		"AWSInstanceType2Arch" : {
			"t2.micro"  : { "Arch" : "32" },
			"t2.medium" : { "Arch" : "64" },
			"m1.small"  : { "Arch" : "64" },
			"m1.medium" : { "Arch" : "64" },
			"m3.medium" : { "Arch" : "64" },
			"m3.large"  : { "Arch" : "64" }
		},
		"AWSRegionArch2AMI" : {
			"us-east-1" : { "32" : "ami-1ecae776", "64" : "ami-1ecae776" }
		}
	},

	"Resources" : {

		"WebServerIAMRole" : {
			"Type" : "AWS::IAM::Role",
			"Properties" : {
				"AssumeRolePolicyDocument" : {
					"Version" : "2012-10-17",
					"Statement" : [{ 
						"Effect" : "Allow",
						"Principal" : {
							"Service" : [ "ec2.amazonaws.com"]
						},
						"Action" : [ "sts:AssumeRole" ]
					}]
				},
				"Path" : "/",
				"Policies" : [{
					"PolicyName" : "root",
					"PolicyDocument" : {
						"Version" : "2012-10-17",
						"Statement" : [
						{
							"Effect" : "Allow",
							"Action" : "cloudformation:DescribeStackResource",
							"Resource" : "*"
						},
						{
							"Effect" : "Allow",
							"Action" : "s3:ListAllMyBuckets",
							"Resource" : "arn:aws:s3:::*"
						},
						{
							"Effect" : "Allow",
							"Action" : [
								"s3:ListBucket",
								"s3:GetBucketLocation"
							],
							"Resource" : [{ "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "WebServerBucket" }] ] }]
						},
						{
							"Effect" : "Allow",
							"Action" : [
								"s3:GetObject"
							],
							"Resource" : [{ "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "WebServerBucket" }, "/", { "Ref" : "Version" }, "/web-server/*" ] ] }]
						}]
					}
				}]
			}
		},

		"WebServerInstanceProfile" : {
			"Type" : "AWS::IAM::InstanceProfile",
			"Properties" : {
				"Path" : "/",
				"Roles" : [{ "Ref" : "WebServerIAMRole"}]
			}
		},

		"S3LoggingBucket" : {
			"Type" : "AWS::S3::Bucket"
		},

		"S3LoggingBucketPolicy" : {
			"Type" : "AWS::S3::BucketPolicy",
			"Properties" : {
				"Bucket" : { "Ref" : "S3LoggingBucket" },
				"PolicyDocument" : {
					"Version" : "2012-10-17",
					"Statement" : [{
						"Effect" : "Allow",
						"Action" : [ "s3:PutObject" ],
						"Resource" : { "Fn::Join" : ["", [ "arn:aws:s3:::", { "Ref" : "S3LoggingBucket" }, "/Logs/AWSLogs/", { "Ref" : "AWS::AccountId" }, "/*" ] ] },
						"Principal" : "*"
					}]
				}
			}
		},

		"WebServer" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"Properties" : {
				"LaunchConfigurationName" : { "Ref" : "WebServerConfiguration" },
				"LoadBalancerNames" : [ { "Ref" : "LoadBalancerName" } ],
				"MaxSize" : "3",
				"MinSize" : "1",
				"Tags" : [{
					"Key" : "Name",
					"Value" : { "Fn::Join" : ["", [ { "Ref" : "ProductionEnvironment" }, "-WebServer" ] ] },
					"PropagateAtLaunch" : true
				}],
				"VPCZoneIdentifier" : [ { "Ref" : "PublicSubnetOne" }, { "Ref" : "PublicSubnetTwo" } ]
			}
		},

		"WebServerConfiguration" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"Properties" : {
				"ImageId" : { "Fn::FindInMap" : [
					"AWSRegionArch2AMI", 
					{ "Ref" : "AWS::Region"},
					{ "Fn::FindInMap" : [
						"AWSInstanceType2Arch", { "Ref" : "WebServerInstanceType" }, "Arch"
					]}
				]},
				"InstanceType" : { "Ref" : "WebServerInstanceType" },
				"IamInstanceProfile" : { "Ref" : "WebServerInstanceProfile" },
				"KeyName" : "Web-Server",
				"SecurityGroups" : [ { "Ref" : "WebServerSecurityGroup" } ],
				"InstanceMonitoring" : false,
				"UserData" : { 
					"Fn::Base64" : { "Fn::Join" : ["", [
						"#!/bin/bash\n",
						"yum update -y\n",

						"/opt/aws/bin/cfn-init -v ",
						"--stack ", { "Ref" : "AWS::StackName" },
						" --resource WebServerConfiguration ",
						"--configsets config_web_server ",
						"--region ", { "Ref" : "AWS::Region" }, "\n",

						"/opt/aws/bin/cfn-signal -e $? ",
						"--stack ", { "Ref" : "AWS::StackName"},
						" --resource WebServer ",
						"--region ", { "Ref" : "AWS::Region" }, "\n"
					]]}

				}
			},
			"Metadata" : {
				"AWS::CloudFormation::Init" : {
					"configSets" : {
						"config_web_server" : ["install_packages", "download_files", "install_dependencies", "build_server", "run_server"]
					},
					"install_packages": {
						"commands" : {
							"01_install_node" : {
								"command" : "yum install -y nodejs npm --enablerepo=epel"
							},
							"02_install_forever" : {
								"command" : "npm install forever -g"
							}
						}
					},
					"download_files" : {
						"commands" : {
							"01_download_server_files" : {
								"command" : { "Fn::Join" : ["", [
									"aws s3 cp --recursive s3://",
									{ "Ref" : "WebServerBucket" },
									"/",
									{"Ref": "Version"},
									"/web-server",
									" /home/ec2-user/server"
								]]}
							}
						}
					},
					"install_dependencies" : {
						"commands" : {
							"01_install_dependencies" : {
								"command" : "npm install",
								"cwd" : "/home/ec2-user/server"
							},
							"02_install_bad_depencies" : {
								"command" : "npm install moment json-2-csv",
								"cwd" : "/home/ec2-user/server"
							}
						}
					},
					"build_server" : {
						"commands" : {
							"01_install_dependencies" : {
								"command" : "npm run build",
								"cwd" : "/home/ec2-user/server"
							}
						}
					},
					"run_server" : {
						"commands" : {
							"01_install_dependencies" : {
								"command" : "NODE_ENV=production forever start server/index.js",
								"cwd" : "/home/ec2-user/server"
							}
						}
					}
				}
			}
		}
	}
}